# Generated by Django 4.2.21 on 2025-05-19 07:46

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MessagePacket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packet_hash', models.CharField(help_text='Eindeutiger Hash des Roh-Pakets zur Vermeidung von Duplikaten', max_length=64, unique=True)),
                ('timestamp_mqtt', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Zeitstempel des MQTT-Paketempfangs (UTC)')),
                ('topic', models.CharField(max_length=255)),
                ('to_node_id_dec', models.BigIntegerField(blank=True, help_text="Ziel Node ID (aus 'to')", null=True)),
                ('channel_id', models.IntegerField(blank=True, help_text='Channel ID aus dem Topic', null=True)),
                ('gateway_id_hex', models.CharField(blank=True, help_text='Gateway ID aus dem Topic (z.B. !e69a833c)', max_length=20, null=True)),
                ('rssi_mqtt', models.IntegerField(blank=True, help_text="RSSI des Gateways zum Node (aus 'rssi')", null=True)),
                ('snr_mqtt', models.FloatField(blank=True, help_text="SNR des Gateways zum Node (aus 'snr')", null=True)),
                ('hops_away_mqtt', models.IntegerField(blank=True, help_text="Hops vom Gateway (aus 'hops_away')", null=True)),
                ('hop_limit', models.IntegerField(blank=True, null=True)),
                ('hop_start', models.IntegerField(blank=True, null=True)),
                ('message_type', models.CharField(blank=True, db_index=True, help_text='Typ aus dem JSON (z.B. position, telemetry, text)', max_length=50, null=True)),
                ('raw_json_payload', models.JSONField(help_text='Die gesamte JSON-Payload der Nachricht')),
            ],
            options={
                'ordering': ['-timestamp_mqtt'],
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_id_dec', models.BigIntegerField(blank=True, help_text='Dezimale Node ID des Ursprungsgeräts', null=True, unique=True)),
                ('node_id_hex', models.CharField(blank=True, help_text='Hexadezimale Node ID (z.B. !abcdef12)', max_length=20, null=True, unique=True)),
                ('long_name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('short_name', models.CharField(blank=True, max_length=20, null=True)),
                ('hardware_model_str', models.CharField(blank=True, max_length=50, null=True)),
                ('role_str', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['long_name', 'node_id_hex'],
            },
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('packet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='text_message_data', to='mqtt_listener.messagepacket')),
            ],
        ),
        migrations.CreateModel(
            name='Telemetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_level', models.IntegerField(blank=True, null=True)),
                ('voltage', models.FloatField(blank=True, help_text='Spannung in Volt', null=True)),
                ('uptime_seconds', models.BigIntegerField(blank=True, null=True)),
                ('air_util_tx', models.FloatField(blank=True, help_text='Als Dezimal, z.B. 0.05 für 5%', null=True)),
                ('channel_utilization', models.FloatField(blank=True, help_text='Als Dezimal, z.B. 0.1 für 10%', null=True)),
                ('packet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telemetry_data', to='mqtt_listener.messagepacket')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.IntegerField(blank=True, null=True)),
                ('precision_bits', models.IntegerField(blank=True, null=True)),
                ('sats_in_view', models.IntegerField(blank=True, null=True)),
                ('pdop', models.FloatField(blank=True, null=True)),
                ('timestamp_device', models.DateTimeField(blank=True, help_text='Zeitstempel der Position vom Gerät (UTC)', null=True)),
                ('packet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='position_data', to='mqtt_listener.messagepacket')),
            ],
        ),
        migrations.AddField(
            model_name='messagepacket',
            name='from_node',
            field=models.ForeignKey(blank=True, help_text="Ursprünglicher Absender (aus 'from')", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_packets', to='mqtt_listener.node'),
        ),
        migrations.AddField(
            model_name='messagepacket',
            name='sender_node',
            field=models.ForeignKey(blank=True, help_text="Direkter Sender/Repeater (aus 'sender')", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relayed_packets', to='mqtt_listener.node'),
        ),
        migrations.AddIndex(
            model_name='messagepacket',
            index=models.Index(fields=['from_node', 'message_type'], name='mqtt_listen_from_no_293887_idx'),
        ),
    ]
